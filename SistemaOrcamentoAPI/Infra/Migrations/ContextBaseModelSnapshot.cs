// <auto-generated />
using System;
using Data.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ContextBase))]
    partial class ContextBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("clienteId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Endereco")
                        .HasColumnName("endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Domain.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("decimal(13, 2)");

                    b.HasKey("ItemId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Domain.Models.ItemOrcamento", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "OrcamentoId");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("ItemOrcamento");
                });

            modelBuilder.Entity("Domain.Models.Orcamento", b =>
                {
                    b.Property<int>("OrcamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orcamentoId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnName("clienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnName("dataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataOrcamento")
                        .HasColumnName("dataOrcamento")
                        .HasColumnType("datetime");

                    b.Property<bool>("Situacao")
                        .HasColumnName("situacao")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAlteracao")
                        .HasColumnName("usuarioAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCriacao")
                        .HasColumnName("usuarioCricacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnName("valorDesconto")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnName("valorTotal")
                        .HasColumnType("decimal(13, 2)");

                    b.HasKey("OrcamentoId");

                    b.ToTable("Orcamento");
                });

            modelBuilder.Entity("Domain.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("usuarioId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasColumnName("login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnName("senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Domain.Models.ItemOrcamento", b =>
                {
                    b.HasOne("Domain.Models.Item", "Item")
                        .WithMany("ListItemOrcamento")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Orcamento", "Orcamento")
                        .WithMany("ListItemOrcamento")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
